(set-info :source |printed by MathSAT|)
(declare-fun Xm.v__AT0 () Int)
(declare-fun Ym.v__AT0 () Int)
(declare-fun Zm.v__AT0 () Int)
(declare-fun i.v__AT0 () Int)
(declare-fun Xm.v__AT1 () Int)
(declare-fun Ym.v__AT1 () Int)
(declare-fun Zm.v__AT1 () Int)
(declare-fun i.v__AT1 () Int)
(define-fun .def_7 () Int (! Xm.v__AT0 :next Xm.v__AT1))
(define-fun .def_19 () Bool (= .def_7 0))
(define-fun .def_8 () Int (! Ym.v__AT0 :next Ym.v__AT1))
(define-fun .def_18 () Bool (= .def_8 0))
(define-fun .def_20 () Bool (and .def_18 .def_19))
(define-fun .def_9 () Int (! Zm.v__AT0 :next Zm.v__AT1))
(define-fun .def_17 () Bool (= .def_9 0))
(define-fun .def_21 () Bool (and .def_17 .def_20))
(define-fun .def_10 () Int (! i.v__AT0 :next i.v__AT1))
(define-fun .def_16 () Bool (= .def_10 0))
(define-fun .def_22 () Bool (! (and .def_16 .def_21) :init true))
(define-fun .def_43 () Int (* (- 1) Xm.v__AT1))
(define-fun .def_44 () Int (+ .def_7 .def_43))
(define-fun .def_45 () Bool (= .def_44 (- 1)))
(define-fun .def_41 () Bool (= .def_7 Xm.v__AT1))
(define-fun .def_46 () Bool (or .def_41 .def_45))
(define-fun .def_37 () Int (* (- 1) Ym.v__AT1))
(define-fun .def_38 () Int (+ .def_8 .def_37))
(define-fun .def_39 () Bool (= .def_38 (- 1)))
(define-fun .def_35 () Bool (= .def_8 Ym.v__AT1))
(define-fun .def_40 () Bool (or .def_35 .def_39))
(define-fun .def_47 () Bool (and .def_40 .def_46))
(define-fun .def_31 () Int (* (- 1) Zm.v__AT1))
(define-fun .def_32 () Int (+ .def_9 .def_31))
(define-fun .def_33 () Bool (= .def_32 (- 1)))
(define-fun .def_29 () Bool (= .def_9 Zm.v__AT1))
(define-fun .def_34 () Bool (or .def_29 .def_33))
(define-fun .def_48 () Bool (and .def_34 .def_47))
(define-fun .def_26 () Int (* (- 1) i.v__AT1))
(define-fun .def_27 () Int (+ .def_10 .def_26))
(define-fun .def_28 () Bool (= .def_27 (- 1)))
(define-fun .def_49 () Bool (! (and .def_28 .def_48) :trans true))
(define-fun .def_53 () Int (+ .def_8 .def_9))
(define-fun .def_54 () Int (+ .def_7 .def_53))
(define-fun .def_55 () Bool (= .def_54 4))
(define-fun .def_56 () Bool (! (not .def_55) :invar-property 0))
(assert true)
