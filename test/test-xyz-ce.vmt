(set-info :source |printed by MathSAT|)
(declare-fun Xm.v__AT0 () Int)
(declare-fun Ym.v__AT0 () Int)
(declare-fun Zm.v__AT0 () Int)
(declare-fun Xm.v__AT1 () Int)
(declare-fun Ym.v__AT1 () Int)
(declare-fun Zm.v__AT1 () Int)
(define-fun .def_7 () Int (! Xm.v__AT0 :next Xm.v__AT1))
(define-fun .def_16 () Bool (= .def_7 0))
(define-fun .def_8 () Int (! Ym.v__AT0 :next Ym.v__AT1))
(define-fun .def_15 () Bool (= .def_8 0))
(define-fun .def_17 () Bool (and .def_15 .def_16))
(define-fun .def_9 () Int (! Zm.v__AT0 :next Zm.v__AT1))
(define-fun .def_14 () Bool (= .def_9 0))
(define-fun .def_18 () Bool (! (and .def_14 .def_17) :init true))
(define-fun .def_49 () Bool (not .def_16))
(define-fun .def_45 () Int (* (- 1) Xm.v__AT1))
(define-fun .def_46 () Int (+ .def_7 .def_45))
(define-fun .def_47 () Bool (= .def_46 (- 1)))
(define-fun .def_50 () Bool (or .def_47 .def_49))
(define-fun .def_42 () Bool (= .def_7 Xm.v__AT1))
(define-fun .def_48 () Bool (or .def_42 .def_47))
(define-fun .def_51 () Bool (and .def_48 .def_50))
(define-fun .def_39 () Bool (not .def_15))
(define-fun .def_35 () Int (* (- 1) Ym.v__AT1))
(define-fun .def_36 () Int (+ .def_8 .def_35))
(define-fun .def_37 () Bool (= .def_36 (- 2)))
(define-fun .def_40 () Bool (or .def_37 .def_39))
(define-fun .def_31 () Bool (= .def_8 Ym.v__AT1))
(define-fun .def_38 () Bool (or .def_31 .def_37))
(define-fun .def_41 () Bool (and .def_38 .def_40))
(define-fun .def_52 () Bool (and .def_41 .def_51))
(define-fun .def_28 () Bool (not .def_14))
(define-fun .def_24 () Int (* (- 1) Zm.v__AT1))
(define-fun .def_25 () Int (+ .def_9 .def_24))
(define-fun .def_26 () Bool (= .def_25 (- 3)))
(define-fun .def_29 () Bool (or .def_26 .def_28))
(define-fun .def_19 () Bool (= .def_9 Zm.v__AT1))
(define-fun .def_27 () Bool (or .def_19 .def_26))
(define-fun .def_30 () Bool (and .def_27 .def_29))
(define-fun .def_53 () Bool (! (and .def_30 .def_52) :trans true))
(define-fun .def_57 () Int (+ .def_8 .def_9))
(define-fun .def_58 () Int (+ .def_7 .def_57))
(define-fun .def_59 () Bool (= .def_58 10))
(define-fun .def_60 () Bool (! (not .def_59) :invar-property 0))
(assert true)
